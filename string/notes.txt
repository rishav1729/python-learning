## Note: While concatenating or replicating strings with operators like + and * is convenient for small-scale operations, itâ€™s important to be aware of performance implications.

For concatenating a large number of strings, using join() is generally more efficient as it allocates memory for the new string only once.

## upper() and lower() Methods
## capitalize() and title() Methods
## strip(), rstrip(), and lstrip() Methods
## split() Method 
## join() Method

    join() method stands out as a particularly powerful tool for constructing strings from iterables like lists or      tuples, but we don't use it with set as it is an unordered data.

## replace() Method
## find() and rfind() Methods

    Note: These methods are particularly useful when the presence of the substring is uncertain, and you wish to avoid handling exceptions. Also, the return value of -1 can be used in conditional statements to execute different code paths based on the presence or absence of a substring.

## index() and rindex() Methods

    Note: The key difference between find()/rfind() and index()/rindex() lies in their handling of substrings that are not found. While index() and rindex() raise a ValueError, find() and rfind() return -1, which can be more convenient in scenarios where the absence of a substring is a common and non-exceptional case.

## startswith() and endswith() Methods
## count() Method
## isalpha(), isdigit(), isnumeric(), and isalnum() Methods
## isspace() Method

    will return true when the string only have space,\t,\n, or all or any two except this it will return faluse also for empty string.

## format() Method

    The format() method is ideal for creating strings with dynamic content, such as user input, results from computations, or data from databases. It can also help you internationalize your application since it separates the template from the data.
    
## center(), ljust(), and rjust() Methods
## zfill() Method
## swapcase() Method
## partition() and rpartition() Methods
## encode() Method
## expandtabs() Method
## islower(), isupper(), and istitle() Methods
## casefold() Method

